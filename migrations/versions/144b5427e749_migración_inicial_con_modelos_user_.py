"""Migraci√≥n inicial con modelos User, Collection, Entry, Tag y EntryTag

Revision ID: 144b5427e749
Revises: 
Create Date: 2025-03-08 22:21:04.048632

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '144b5427e749'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('_password_hash', sa.String(length=128), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('theme_preference', sa.String(length=10), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_user_active_verified', ['is_active', 'is_verified'], unique=False)
        batch_op.create_index('idx_user_username_email', ['username', 'email'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image_path', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('collections', schema=None) as batch_op:
        batch_op.create_index('idx_collection_created', ['created_at'], unique=False)
        batch_op.create_index('idx_collection_user_name', ['user_id', 'name'], unique=False)

    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'user_id', name='uq_tag_name_user')
    )
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.create_index('idx_tag_name', ['name'], unique=False)
        batch_op.create_index('idx_tag_user', ['user_id'], unique=False)

    op.create_table('entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('BORRADOR', 'PUBLICADO', name='entrystatus'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('entries', schema=None) as batch_op:
        batch_op.create_index('idx_entry_collection', ['collection_id'], unique=False)
        batch_op.create_index('idx_entry_created', ['created_at'], unique=False)
        batch_op.create_index('idx_entry_status', ['status'], unique=False)
        batch_op.create_index('idx_entry_title', ['title'], unique=False)
        batch_op.create_index('idx_entry_user', ['user_id'], unique=False)

    op.create_table('entry_tags',
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entries.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('entry_id', 'tag_id')
    )
    with op.batch_alter_table('entry_tags', schema=None) as batch_op:
        batch_op.create_index('idx_entrytag_entry', ['entry_id'], unique=False)
        batch_op.create_index('idx_entrytag_tag', ['tag_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('entry_tags', schema=None) as batch_op:
        batch_op.drop_index('idx_entrytag_tag')
        batch_op.drop_index('idx_entrytag_entry')

    op.drop_table('entry_tags')
    with op.batch_alter_table('entries', schema=None) as batch_op:
        batch_op.drop_index('idx_entry_user')
        batch_op.drop_index('idx_entry_title')
        batch_op.drop_index('idx_entry_status')
        batch_op.drop_index('idx_entry_created')
        batch_op.drop_index('idx_entry_collection')

    op.drop_table('entries')
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index('idx_tag_user')
        batch_op.drop_index('idx_tag_name')

    op.drop_table('tags')
    with op.batch_alter_table('collections', schema=None) as batch_op:
        batch_op.drop_index('idx_collection_user_name')
        batch_op.drop_index('idx_collection_created')

    op.drop_table('collections')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index('idx_user_username_email')
        batch_op.drop_index('idx_user_active_verified')

    op.drop_table('users')
    # ### end Alembic commands ###
